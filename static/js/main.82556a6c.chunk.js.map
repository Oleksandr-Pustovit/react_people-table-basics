{"version":3,"sources":["components/NavBar/NavBar.tsx","App.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","index.tsx"],"names":["NavBar","className","role","isActive","classNames","to","App","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","name","person","people","find","el","slug","classnames","sex","PeopleTable","useParams","map","born","died","motherName","fatherName","PeoplePage","useState","isLoading","setIsLoading","setPeople","useEffect","res","catch","finally","length","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"uOAGaA,EAAS,kBACpB,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cACtC,CAAE,8BAA+BD,GADxB,EAEXE,GAAG,IAHL,kBAQA,cAAC,IAAD,CACEJ,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cACtC,CAAE,8BAA+BD,GADxB,EAEXE,GAAG,UAHL,0BAjBc,ECCTC,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAML,UAAU,UAAhB,SACE,cAAC,IAAD,QALa,E,cCKZ,SAASM,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKf,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECQTgB,EAAwB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAChCC,EADmD,EAAbC,OACtBC,MAAK,SAAAC,GAAE,OAAIA,EAAGJ,OAASA,CAAhB,IAE7B,OAAKC,EASH,cAAC,IAAD,CACEd,GAAE,aAAQc,EAAOI,MACjBtB,UAAWuB,IAAW,CAAE,kBAAkC,MAAfL,EAAOM,MAFpD,SAIGP,IAXD,mCACGA,GAaR,ECnBYQ,EAAyB,SAAC,GAAgB,IAAdN,EAAa,EAAbA,OAC/BG,EAASI,cAATJ,KAER,OACE,wBACE,UAAQ,cACRtB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGmB,EAAOQ,KAAI,SAAAT,GAAM,OAChB,qBACE,UAAQ,SACRlB,UACEuB,IAAW,CAAE,yBAA0BL,EAAOI,OAASA,IAH3D,UAOE,6BACE,cAAC,EAAD,CACEL,KAAMC,EAAOD,KACbE,OAAQA,MAIZ,6BAAKD,EAAOM,KAAO,MACnB,6BAAKN,EAAOU,MAAQ,MACpB,6BAAKV,EAAOW,MAAQ,MACpB,6BACGX,EAAOY,WACN,cAAC,EAAD,CACEb,KAAMC,EAAOY,WACbX,OAAQA,IAGV,2CAKJ,6BACGD,EAAOa,WACN,cAAC,EAAD,CACEd,KAAMC,EAAOa,WACbZ,OAAQA,IAGV,6CA/BCD,EAAOI,KANE,QA+CzB,ECvEYU,EAAa,WACxB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAA0B,MAAtD,mBAAOd,EAAP,KAAeiB,EAAf,KAeA,OAbAC,qBAAU,WACR/B,IACGK,MAAK,SAAA2B,GACJF,EAAUE,EACX,IACAC,OAAM,WAEN,IACAC,SAAQ,WACPL,GAAa,EACd,GACJ,GAAE,IAGD,qCACE,oBAAInC,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SACGkC,EAAa,cAAC,EAAD,IACZ,mCACIf,EAKA,mCACqB,IAAlBA,EAAOsB,OACN,mBAAG,UAAQ,kBAAX,+CAIA,mCACE,cAAC,EAAD,CAAatB,OAAQA,QAX3B,mBAAG,UAAQ,qBAAqBnB,UAAU,kBAA1C,0CAsBf,ECxCD0C,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CACEC,OAAK,EACLD,QACE,oBAAI/C,UAAU,QAAd,yBAIJ,cAAC,IAAD,CAAO8C,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAU3C,GAAG,IAAI6C,SAAO,MAErD,eAAC,IAAD,CAAOH,KAAK,UAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,SAG/B,cAAC,IAAD,CACED,KAAK,IACLC,QACE,oBAAI/C,UAAU,QAAd,qC","file":"static/js/main.82556a6c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => classNames('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => classNames('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\n// import { Loader } from './components/Loader';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <Outlet />\n    </main>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classnames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  name: string,\n  people: Person[],\n};\n\nexport const PersonLink: FC<Props> = ({ name, people }) => {\n  const person = people.find(el => el.name === name);\n\n  if (!person) {\n    return (\n      <>\n        {name}\n      </>\n    );\n  }\n\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classnames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classnames from 'classnames';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            className={\n              classnames({ 'has-background-warning': person.slug === slug })\n            }\n            key={person.slug}\n          >\n            <td>\n              <PersonLink\n                name={person.name}\n                people={people}\n              />\n            </td>\n\n            <td>{person.sex || '-'}</td>\n            <td>{person.born || '-'}</td>\n            <td>{person.died || '-'}</td>\n            <td>\n              {person.motherName ? (\n                <PersonLink\n                  name={person.motherName}\n                  people={people}\n                />\n              ) : (\n                <>\n                  -\n                </>\n              )}\n            </td>\n            <td>\n              {person.fatherName ? (\n                <PersonLink\n                  name={person.fatherName}\n                  people={people}\n                />\n              ) : (\n                <>\n                  -\n                </>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [people, setPeople] = useState<Person[] | null>(null);\n\n  useEffect(() => {\n    getPeople()\n      .then(res => {\n        setPeople(res);\n      })\n      .catch(() => {\n        //\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (<Loader />) : (\n            <>\n              {!people ? (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              ) : (\n                <>\n                  {people.length === 0 ? (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  ) : (\n                    <>\n                      <PeopleTable people={people} />\n                    </>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './pages/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route\n            index\n            element={(\n              <h1 className=\"title\">Home Page</h1>\n            )}\n          />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={(\n              <h1 className=\"title\">Page not found</h1>\n            )}\n          />\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}